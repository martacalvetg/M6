{"ast":null,"code":"import { BehaviorSubject, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class ClientesService {\n  constructor() {\n    this.clienteName = new BehaviorSubject('');\n    this.castCliente = this.clienteName.asObservable();\n    this.clientePrice = new BehaviorSubject('');\n    this.castPrice = this.clientePrice.asObservable();\n    this.clienteEmail = new BehaviorSubject('');\n    this.castEmail = this.clienteEmail.asObservable();\n    this.clienteProvincia = new BehaviorSubject('');\n    this.castProvincia = this.clienteProvincia.asObservable();\n    this.clientes = [];\n  }\n  broadCastClienteName(name, price) {\n    this.clienteName.next(name);\n    this.clientePrice.next(price);\n    this.clienteEmail.next(email);\n  }\n  sendClientes(name, price) {\n    if (name != \"\" && price != \"\") {\n      this.clientes.push({\n        name: name,\n        price: price,\n        email: email\n      });\n    }\n    return of(this.clientes);\n  }\n}\nClientesService.ɵfac = function ClientesService_Factory(t) {\n  return new (t || ClientesService)();\n};\nClientesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientesService,\n  factory: ClientesService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,EAAEC,EAAE,QAAQ,MAAM;;AAO1C,OAAM,MAAOC,eAAe;EACxBC;IACQ,gBAAW,GAAG,IAAIH,eAAe,CAAS,EAAE,CAAC;IACpD,gBAAW,GAAG,IAAI,CAACI,WAAW,CAACC,YAAY,EAAE;IAEtC,iBAAY,GAAG,IAAIL,eAAe,CAAS,EAAE,CAAC;IACrD,cAAS,GAAG,IAAI,CAACM,YAAY,CAACD,YAAY,EAAE;IAErC,iBAAY,GAAG,IAAIL,eAAe,CAAS,EAAE,CAAC;IACrD,cAAS,GAAG,IAAI,CAACO,YAAY,CAACF,YAAY,EAAE;IAErC,qBAAgB,GAAG,IAAIL,eAAe,CAAS,EAAE,CAAC;IACzD,kBAAa,GAAG,IAAI,CAACQ,gBAAgB,CAACH,YAAY,EAAE;IAQrD,aAAQ,GAAa,EAAE;EAnBT;EAaNI,oBAAoB,CAACC,IAAW,EAAEC,KAAY;IACjD,IAAI,CAACP,WAAW,CAACQ,IAAI,CAACF,IAAI,CAAC;IAC3B,IAAI,CAACJ,YAAY,CAACM,IAAI,CAACD,KAAK,CAAC;IAC7B,IAAI,CAACJ,YAAY,CAACK,IAAI,CAACC,KAAK,CAAC;EACjC;EAIOC,YAAY,CAACJ,IAAW,EAAEC,KAAY;IACzC,IAAGD,IAAI,IAAI,EAAE,IAAIC,KAAK,IAAI,EAAE,EAAC;MACzB,IAAI,CAACI,QAAQ,CAACC,IAAI,CAAC;QAACN,IAAI,EAAEA,IAAI;QAAEC,KAAK,EAAEA,KAAK;QAAEE,KAAK,EAAEA;MAAK,CAAG,CAAC;;IAElE,OAAOZ,EAAE,CAAE,IAAI,CAACc,QAAQ,CAAC;EAC7B;;AA3BQb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;AAAA","names":["BehaviorSubject","of","ClientesService","constructor","clienteName","asObservable","clientePrice","clienteEmail","clienteProvincia","broadCastClienteName","name","price","next","email","sendClientes","clientes","push","factory"],"sourceRoot":"","sources":["E:\\ANGULAR\\practica3\\servicios\\clientServices.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, of } from \"rxjs\";\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Cliente } from \"src/app/body/clientes/show-cliente/show-cliente.component\";\n\n\n\n@Injectable()\nexport class ClientesService{\n    constructor(){}\n     public clienteName = new BehaviorSubject<string>('');\n     castCliente = this.clienteName.asObservable();\n\n     public clientePrice = new BehaviorSubject<string>('');\n     castPrice = this.clientePrice.asObservable();\n\n     public clienteEmail = new BehaviorSubject<string>('');\n     castEmail = this.clienteEmail.asObservable();\n\n     public clienteProvincia = new BehaviorSubject<string>('');\n     castProvincia = this.clienteProvincia.asObservable();\n\n     public broadCastClienteName(name:string, price:string){\n         this.clienteName.next(name);\n         this.clientePrice.next(price);\n         this.clienteEmail.next(email);\n     }\n\n    clientes:Cliente[] = [];\n\n     public sendClientes(name:string, price:string):Observable<Cliente[]>{\n         if(name != \"\" && price != \"\"){\n             this.clientes.push({name: name, price: price, email: email, });\n         }\n         return of (this.clientes);\n     }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}