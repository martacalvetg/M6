{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction FormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"El campo nombre es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"El campo apellido...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormComponent {\n  customVal(campo) {\n    if (campo.value === 'Rojo') {\n      return {\n        colorErroneo: true\n      };\n    } else {\n      return null;\n    }\n  }\n  constructor() {\n    this.nombre = new FormControl('', Validators.required);\n    this.apellido1 = new FormControl('', [Validators.minLength(3), Validators.maxLength(10)]);\n    this.apellido2 = new FormControl('');\n    this.color = new FormControl('', [this.customVal, Validators.required]);\n    this.adulto = new FormControl('', Validators.required);\n    this.fnacimiento = new FormControl('', Validators.required);\n    this.MyNewForm = new FormGroup({\n      nombre: this.nombre,\n      apellido1: this.apellido1,\n      apellido2: this.apellido2,\n      color: this.color,\n      fnacimiento: this.fnacimiento,\n      adulto: this.adulto\n    });\n  }\n  ngOnInit() {}\n  Clic(datos) {\n    console.log(datos);\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)();\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-grup\", \"mb-3\"], [1, \"input-group-prepend\"], [1, \"input-grup-text\"], [\"type\", \"text\", \"name\", \"nombre\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"apellido1\", \"formControlName\", \"apellido1\", 1, \"form-control\"], [1, \"alert\", \"alert-danger\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.Clic(ctx.MyNewForm.value);\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n      i0.ɵɵtext(5, \"Nombre\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, FormComponent_div_7_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3)(10, \"span\", 4);\n      i0.ɵɵtext(11, \"Apellido1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, FormComponent_div_13_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.MyNewForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.nombre.invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.apellido1.value == \"\" || (ctx.apellido1.errors == null ? null : ctx.apellido1.errors[\"minlength\"]));\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;;;;ICQrDC,8BAAuD;IAAAA,8CAA8B;IAAAA,iBAAM;;;;;IAQ3FA,8BAAmG;IAAAA,oCAAoB;IAAAA,iBAAM;;;ADTzI,OAAM,MAAOC,aAAa;EACxBC,SAAS,CAACC,KAAiB;IACvB,IAAIA,KAAK,CAACC,KAAK,KAAK,MAAM,EAAE;MAAC,OAAO;QAACC,YAAY,EAAC;MAAI,CAAC;KAAE,MACpD;MAAC,OAAO,IAAI;;EACnB;EAgBFC;IAdE,WAAM,GAAgB,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;IAC9D,cAAS,GAAgB,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EAAET,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACjG,cAAS,GAAgB,IAAIZ,WAAW,CAAC,EAAE,CAAC;IAC5C,UAAK,GAAgB,IAAIA,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,CAACK,SAAS,EAAEH,UAAU,CAACQ,QAAQ,CAAC,CAAC;IAC/E,WAAM,GAAgB,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;IAC9D,gBAAW,GAAgB,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACQ,QAAQ,CAAC;IAEnE,cAAS,GAAc,IAAIT,SAAS,CAAC;MAACY,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,MAAM,EAAE,IAAI,CAACA;IAAM,CAAC,CAAC;EAE9C;EACfC,QAAQ,IAAI;EACZC,IAAI,CAACC,KAAe;IAAGC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAAC;;AAtB/BjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT1BzB,8BAAkB;MACgBA;QAAA,OAAY0B,6BAAqB;MAAA,EAAC;MAG5D1B,8BAA6B;MAESA,sBAAM;MAAAA,iBAAO;MAE/CA,2BAA+E;MACnFA,iBAAM;MACFA,8DAA2F;MAE/FA,8BAA6B;MAESA,0BAAS;MAAAA,iBAAO;MAElDA,4BAAqF;MACzFA,iBAAM;MACFA,gEAA6H;MAErIA,iBAAO;;;MAnBDA,eAAuB;MAAvBA,yCAAuB;MASfA,eAAoB;MAApBA,yCAAoB;MAQpBA,eAAgE;MAAhEA,6HAAgE","names":["FormControl","FormGroup","Validators","i0","FormComponent","customVal","campo","value","colorErroneo","constructor","required","minLength","maxLength","nombre","apellido1","apellido2","color","fnacimiento","adulto","ngOnInit","Clic","datos","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\ANGULAR\\practica3\\src\\app\\body\\form\\form.component.ts","E:\\ANGULAR\\practica3\\src\\app\\body\\form\\form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { from } from 'rxjs';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit{\n  customVal(campo:FormControl){\n      if (campo.value === 'Rojo') {return {colorErroneo:true};}\n      else {return null;}\n    }\n\n    nombre: FormControl = new FormControl('', Validators.required);\n    apellido1: FormControl = new FormControl('', [Validators.minLength(3), Validators.maxLength(10)]);\n    apellido2: FormControl = new FormControl('');\n    color: FormControl = new FormControl('', [this.customVal, Validators.required]);\n    adulto: FormControl = new FormControl('', Validators.required);\n    fnacimiento: FormControl = new FormControl('', Validators.required);\n\n    MyNewForm: FormGroup = new FormGroup({nombre: this.nombre,\n                                          apellido1: this.apellido1,\n                                          apellido2: this.apellido2,\n                                          color: this.color,\n                                          fnacimiento: this.fnacimiento,\n                                          adulto: this.adulto});\n\n  constructor() {}\n  ngOnInit() {}\n  Clic(datos:FormGroup) {console.log(datos);}\n}\n\n  \n","<div class=\"form\">\n    <form [formGroup]=\"MyNewForm\" (ngSubmit)=\"Clic(MyNewForm.value)\">\n\n        <!-- campo nombre -->\n        <div class=\"input-grup mb-3\">\n            <div class=\"input-group-prepend\">\n                <span class=\"input-grup-text\">Nombre</span>\n            </div>\n            <input type=\"text\" class=\"form-control\" name=\"nombre\" formControlName=\"nombre\">\n        </div>\n            <div *ngIf=\"nombre.invalid\" class=\"alert alert-danger\">El campo nombre es obligatorio</div>\n\n        <div class=\"input-grup mb-3\">\n            <div class=\"input-group-prepend\">\n                <span class=\"input-grup-text\">Apellido1</span>\n            </div>\n            <input type=\"text\" class=\"form-control\" name=\"apellido1\" formControlName=\"apellido1\">\n        </div>\n            <div *ngIf=\"(apellido1.value == '' || apellido1.errors?.['minlength'])\" class=\"alert alert-danger\">El campo apellido...</div>\n    \n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}